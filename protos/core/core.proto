syntax = "proto3";

package mavsdk.rpc.core;

option java_package = "io.mavsdk.core";
option java_outer_classname = "CoreProto";

// Access to the connection state and core configurations
service CoreService {
    /*
     * Subscribe to 'connection state' updates.
     */
    rpc SubscribeConnectionState(SubscribeConnectionStateRequest) returns(stream ConnectionStateResponse) {}
    /*
     * Set timeout of MAVLink transfers.
     *
     * The default timeout used is generally (0.5 seconds) seconds.
     * If MAVSDK is used on the same host this timeout can be reduced, while
     * if MAVSDK has to communicate over links with high latency it might
     * need to be increased to prevent timeouts.
     */
    rpc SetMavlinkTimeout(SetMavlinkTimeoutRequest) returns(SetMavlinkTimeoutResponse) {}

    /*
     * Set MAVLink system and component Ids.
     */
    rpc SetMavlinkSystemAndComponentId(SetMavlinkSystemAndComponentIdRequest) returns(SetMavlinkSystemAndComponentIdResponse) {}
}

message SubscribeConnectionStateRequest {}
message ConnectionStateResponse {
    ConnectionState connection_state = 1; // Connection state
}

message SetMavlinkTimeoutRequest {
    double timeout_s = 1; // Timeout in seconds
}
message SetMavlinkTimeoutResponse {}

message SetMavlinkSystemAndComponentIdRequest {
    uint32 system_id = 1; // MAVLink system ID, range 1..255
    uint32 component_id = 2; // MAVLinkComponentIdRequest, range: 1..255
}
message SetMavlinkSystemAndComponentIdResponse {}

// Connection state type.
message ConnectionState {
    bool is_connected = 2; // Whether the vehicle got connected or disconnected
}
