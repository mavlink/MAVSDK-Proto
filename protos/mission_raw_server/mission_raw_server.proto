syntax = "proto3";

package mavsdk.rpc.mission_raw_server;

import "mavsdk_options.proto";

option java_package = "io.mavsdk.mission_raw_server";
option java_outer_classname = "MissionRawServerProto";

// Acts as a vehicle and receives incoming missions from GCS (in raw MAVLINK format). 
// Provides current mission item state, so the server can progress through missions.
service MissionRawServerService {
    /*
     * Subscribe to when a new mission is uploaded (asynchronous).
     */
    rpc SubscribeIncomingMission(SubscribeIncomingMissionRequest) returns(stream IncomingMissionResponse) {}

    /*
     * Subscribe to the result of outgoing mission download requests (air to ground)
     */
    rpc SubscribeOutgoingMissionResult(SubscribeOutgoingMissionRequest) returns(stream OutgoingMissionResponse) {}

    /*
     * Subscribe to when a new current item is set
     */
    rpc SubscribeCurrentItemChanged(SubscribeCurrentItemChangedRequest) returns(stream CurrentItemChangedResponse) {}

    /*
     *  Set Current item as completed
     */
    rpc SetCurrentItemComplete(SetCurrentItemCompleteRequest) returns(SetCurrentItemCompleteResponse) { option (mavsdk.options.async_type) = SYNC; }

    /*
     *  Subscribe when a MISSION_CLEAR_ALL is received
     */
    rpc SubscribeClearAll(SubscribeClearAllRequest) returns(stream ClearAllResponse) {}
}

message SubscribeIncomingMissionRequest {}
message IncomingMissionResponse {
    MissionRawServerResult mission_raw_server_result = 1;
    MissionPlan mission_plan = 2; // The mission plan
}

message SubscribeOutgoingMissionRequest {}
message OutgoingMissionResponse {
    MissionRawServerResult mission_raw_server_result = 1;
}

message SubscribeCurrentItemChangedRequest {}
message CurrentItemChangedResponse {
    MissionItem mission_item = 1;
}

message SubscribeClearAllRequest {}
message ClearAllResponse {
    uint32 clear_type = 1;
}

message SetCurrentItemCompleteRequest {}
message SetCurrentItemCompleteResponse {}

// Mission item exactly identical to MAVLink MISSION_ITEM_INT.
message MissionItem {
    uint32 seq = 1; // Sequence (uint16_t)
    uint32 frame = 2; // The coordinate system of the waypoint (actually uint8_t)
    uint32 command = 3; // The scheduled action for the waypoint (actually uint16_t)
    uint32 current = 4; // false:0, true:1 (actually uint8_t)
    uint32 autocontinue = 5; // Autocontinue to next waypoint (actually uint8_t)
    float param1 = 6; // PARAM1, see MAV_CMD enum
    float param2 = 7; // PARAM2, see MAV_CMD enum
    float param3 = 8; // PARAM3, see MAV_CMD enum
    float param4 = 9; // PARAM4, see MAV_CMD enum
    int32 x = 10; // PARAM5 / local: x position in meters * 1e4, global: latitude in degrees * 10^7
    int32 y = 11; // PARAM6 / y position: local: x position in meters * 1e4, global: longitude in degrees *10^7
    float z = 12; // PARAM7 / local: Z coordinate, global: altitude (relative or absolute, depending on frame)
    uint32 mission_type = 13; // Mission type (actually uint8_t)
}

// Mission plan type
message MissionPlan {
    repeated MissionItem mission_items = 1; // The mission items
}

// Mission progress type.
message MissionProgress {
    int32 current = 1; // Current mission item index (0-based), if equal to total, the mission is finished
    int32 total = 2; // Total number of mission items
}

// Result type.
message MissionRawServerResult {
    // Possible results returned for action requests.
    enum Result {
        RESULT_UNKNOWN = 0; // Unknown result
        RESULT_SUCCESS = 1; // Request succeeded
        RESULT_ERROR = 2; // Error
        RESULT_TOO_MANY_MISSION_ITEMS = 3; // Too many mission items in the mission
        RESULT_BUSY = 4; // Vehicle is busy
        RESULT_TIMEOUT = 5; // Request timed out
        RESULT_INVALID_ARGUMENT = 6; // Invalid argument
        RESULT_UNSUPPORTED = 7; // Mission downloaded from the system is not supported
        RESULT_NO_MISSION_AVAILABLE = 8; // No mission available on the system
        RESULT_UNSUPPORTED_MISSION_CMD = 11; // Unsupported mission command
        RESULT_TRANSFER_CANCELLED = 12; // Mission transfer (upload or download) has been cancelled
        RESULT_NO_SYSTEM = 13; // No system connected
        RESULT_NEXT = 14; // Intermediate message showing progress or instructions on the next steps
    }

    Result result = 1; // Result enum value
    string result_str = 2; // Human-readable English string describing the result
}
